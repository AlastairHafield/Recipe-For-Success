{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","concat","product","map","_id","purchaseQuantity","newState","filter","createStore","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","_jsxs","className","children","Link","to","_jsx","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","_Fragment","description","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Provider","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.73a0b947.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  categories: [],\r\n  currentCategory: '',\r\n  cart: [],\r\n  cartOpen: false\r\n};\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(reducers);","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { pluralize } from '../../utils/helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction ProductItem(item) {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img alt={name} src={`/images/${image}`} />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>\r\n          {quantity} {pluralize('item', quantity)} in stock\r\n        </div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Cart from '../components/Cart';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport spinner from '../assets/spinner.gif';\r\n\r\nfunction Detail() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Products</Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentProduct.price}{' '}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 560,\r\n        clear: 'both',\r\n        paddingTop: 120,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport Auth from '../../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">Order History</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"shopping bag\">\r\n            🛍️\r\n          </span>\r\n          -Shop-Shop\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>{showNavigation()}</nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport Success from \"./pages/Success\";\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"/success\" element={<Success />} />\r\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\r\n              <Route path=\"/products/:id\" element={<Detail />} />\r\n              <Route path=\"*\" element={<NoMatch />} />\r\n            </Routes>\r\n          </Provider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n//bbbb\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.////\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}