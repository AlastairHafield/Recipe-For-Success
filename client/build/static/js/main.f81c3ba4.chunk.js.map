{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","components/Banner/index.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_RECIPES","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","recipes","categories","currentCategory","cart","cartOpen","reducers","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","concat","recipe","map","_id","purchaseQuantity","newState","filter","createStore","Banner","_jsxs","className","children","_jsx","src","alt","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","RecipeItem","item","dispatch","useDispatch","useSelector","image","name","Link","to","onClick","itemInCart","find","cartItem","parseInt","QUERY_RECIPES","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","ProductItem","price","spinner","CategoryMenu","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","removeFromCart","authService","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","recipeIds","i","push","variables","Home","Detail","useParams","_useState","useState","_useState2","currentRecipe","setCurrentRecipe","indexedRecipes","_Fragment","description","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","products","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Provider","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f81c3ba4.chunk.js","sourcesContent":["export const UPDATE_RECIPES = \"UPDATE_RECIPES\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import {\r\n  UPDATE_RECIPES,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  recipes: [],\r\n  categories: [],\r\n  currentCategory: \"\",\r\n  cart: [],\r\n  cartOpen: false,\r\n};\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_RECIPES:\r\n      return {\r\n        ...state,\r\n        recipes: [...action.recipes],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.recipe],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.recipes],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((recipe) => {\r\n          if (action._id === recipe._id) {\r\n            recipe.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return recipe;\r\n        }),\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((recipe) => {\r\n        return recipe._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(reducers);","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <div className=\"banner-container\">\r\n      <img\r\n        className=\"banner-image\"\r\n        src=\"https://as2.ftcdn.net/v2/jpg/01/57/28/31/1000_F_157283191_ALJy3vuwlPKVdDtPPCZsPpRk3BksFlwF.jpg\"\r\n        alt=\"Banner\"\r\n      />\r\n      <div className=\"banner-text-container\">\r\n        <h1 className=\"banner-text\">\r\n          <span className=\"first-letter\">R</span>ecipe{\" \"}\r\n          <span className=\"first-letter\">F</span>or{\" \"}\r\n          <span className=\"first-letter\">S</span>uccess!\r\n        </h1>\r\n        <div className=\"banner-text-smoke-effect\"></div>\r\n      </div>\r\n      <div className=\"banner-image-smoke-effect\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open(\"RFS\", 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function (e) {\r\n      const db = request.result;\r\n      db.createObjectStore(\"recipes\", { keyPath: \"_id\" });\r\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\r\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\r\n    };\r\n\r\n    request.onerror = function (e) {\r\n      console.log(\"There was an error\");\r\n    };\r\n\r\n    request.onsuccess = function (e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, \"readwrite\");\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function (e) {\r\n        console.log(\"error\", e);\r\n      };\r\n\r\n      switch (method) {\r\n        case \"put\":\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case \"get\":\r\n          const all = store.getAll();\r\n          all.onsuccess = function () {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case \"delete\":\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log(\"No valid method\");\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function () {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nfunction RecipeItem(item) {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { image, name, _id } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        recipe: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/recipes/${_id}`}>\r\n        <img alt={name} src={`/images/${image}`} />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <button onClick={addToCart}>Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeItem;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_RECIPES = gql`\r\n  query getRecipes($category: ID) {\r\n    recipes(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($recipes: [ID]!) {\r\n    checkout(recipes: $recipes) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_RECIPES = gql`\r\n  {\r\n    recipes {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        recipes {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\r\nimport ProductItem from \"../ProductItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UPDATE_RECIPES } from \"../../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_RECIPES } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\n\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_RECIPES);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_RECIPES,\r\n        recipes: data.recipes,\r\n      });\r\n      data.recipes.forEach((recipe) => {\r\n        idbPromise(\"recipes\", \"put\", recipe);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"recipes\", \"get\").then((recipes) => {\r\n        dispatch({\r\n          type: UPDATE_RECIPES,\r\n          recipes: recipes,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterRecipes() {\r\n    if (!currentCategory) {\r\n      return state.recipes;\r\n    }\r\n\r\n    return state.recipes.filter(\r\n      (recipe) => recipe.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Recipes:</h2>\r\n      {state.recipes.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterRecipes().map((recipe) => (\r\n            <ProductItem\r\n              key={recipe._id}\r\n              _id={recipe._id}\r\n              image={recipe.image}\r\n              name={recipe.name}\r\n              price={recipe.price}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>Oops! No recipes found!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem(\"id_token\");\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem(\"id_token\", idToken);\r\n\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem(\"id_token\");\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign(\"/\");\r\n  }\r\n}\r\n\r\nconst authService = new AuthService();\r\nexport default authService;\r\n","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport \"./style.css\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, recipes: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const recipeIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        recipeIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { recipes: recipeIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport Banner from \"../components/Banner\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\nimport \"./home.css\"; // import the css file for the home page\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\" \"}\r\n        <Banner />\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <CategoryMenu />\r\n        <ProductList />\r\n        <Cart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./detail.css\"; // import the css file for the detail page\r\n\r\nimport Cart from \"../components/Cart\";\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_RECIPES,\r\n} from \"../utils/actions\";\r\nimport { QUERY_RECIPES } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\n\r\nfunction Detail() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const { id } = useParams();\r\n\r\n  const [currentRecipe, setCurrentRecipe] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_RECIPES);\r\n\r\n  const { recipes, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (recipes.length) {\r\n      setCurrentRecipe(recipes.find((recipe) => recipe._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_RECIPES,\r\n        recipes: data.recipes,\r\n      });\r\n\r\n      data.recipes.forEach((recipe) => {\r\n        idbPromise(\"recipe\", \"put\", recipe);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise(\"recipes\", \"get\").then((indexedRecipes) => {\r\n        dispatch({\r\n          type: UPDATE_RECIPES,\r\n          recipes: indexedRecipes,\r\n        });\r\n      });\r\n    }\r\n  }, [recipes, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        recipe: { ...currentRecipe, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...currentRecipe, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentRecipe._id,\r\n    });\r\n\r\n    idbPromise(\"cart\", \"delete\", { ...currentRecipe });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentRecipe && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Recipes</Link>\r\n\r\n          <h2>{currentRecipe.name}</h2>\r\n\r\n          <p>{currentRecipe.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentRecipe.price}{\" \"}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentRecipe._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentRecipe.image}`}\r\n            alt={currentRecipe.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 560,\r\n        clear: 'both',\r\n        paddingTop: 120,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport \"./noMatch.css\"; // import the css file for the home page\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($recipes: [ID]!) {\r\n    addOrder(recipes: $recipes) {\r\n      purchaseDate\r\n      recipes {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport \"./login.css\"; // import the css file for the home page\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\nimport \"./signUp.css\"; // import the css file for the home page\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">Order History</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"Shrimp\">\r\n            🍤\r\n          </span>\r\n          RFS\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>{showNavigation()}</nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport \"./success.css\"; // import the css file for the success page\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise(\"cart\", \"delete\", item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign(\"/\");\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./orderHistory.css\"; // import the css file for the home page\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_USER } from \"../utils/queries\";\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Recipes</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.recipes.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/recipes/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport Success from \"./pages/Success\";\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"/success\" element={<Success />} />\r\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\r\n              <Route path=\"/recipes/:id\" element={<Detail />} />\r\n              <Route path=\"*\" element={<NoMatch />} />\r\n            </Routes>\r\n          </Provider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n//bbbb\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.////\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}